{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterbottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","console","log","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.769ad43e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3kToC\",\"card\":\"Cards_card__3gtsy\",\"infected\":\"Cards_infected__1DEAf\",\"recovered\":\"Cards_recovered__t-dy3\",\"deaths\":\"Cards_deaths__1_rEO\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nconst Cards=({data:{confirmed,recovered,deaths,lastUpdate}})=>{\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterbottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                            start={0}\r\n                            end={confirmed.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterbottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={recovered.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from of covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterbottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp\r\n                                start={0}\r\n                                end={deaths.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n\r\n                            />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of Deaths caused by covid-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url =\"https://covid19.mathdro.id/api\";\r\n\r\n\r\nexport const fetchData=async (country)=>{\r\n    let changeableUrl=url;\r\n    if(country){\r\n        changeableUrl=`${url}/countries/${country}`\r\n    }\r\n    try{\r\n        const {data:{confirmed,recovered,deaths,lastUpdate}} =await axios.get(changeableUrl);\r\n       const modifiedData={\r\n            confirmed,\r\n            recovered,\r\n            deaths,\r\n            lastUpdate\r\n       }\r\n       return modifiedData;\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}\r\nexport const fetchDailyData=async ()=>{\r\n    try{\r\n        const {data} =await axios.get(`${url}/daily`);\r\n        const modifiedData=data.map((dailyData)=>({\r\n            confirmed:dailyData.confirmed.total,\r\n            deaths:dailyData.deaths.total,\r\n            date:dailyData.reportDate,\r\n        }))\r\n        return modifiedData;\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries=async()=>{\r\n    try{\r\n        const {data:{countries}}=await axios.get(`${url}/countries`);\r\n        return countries.map((country)=>country.name);\r\n\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart=({data:{confirmed,deaths,recovered},country})=>{\r\n    const [dailyData,setDailyData]=useState([]);\r\n    \r\n    useEffect(()=>{\r\n        const fetchAPI=async()=>{\r\n            setDailyData(await fetchDailyData())\r\n        }\r\n        fetchAPI();\r\n    })\r\n    const lineChart=(\r\n        dailyData.length?\r\n        (<Line\r\n            data={{\r\n                labels:dailyData.map(({date})=>date),\r\n                datasets:[{\r\n                    data:dailyData.map(({confirmed})=>confirmed),\r\n                    label:'Infected',\r\n                    borderColor:'#3333ff',\r\n                    fill:true\r\n                },\r\n                {\r\n                    data:dailyData.map(({deaths})=>deaths),\r\n                    label:'Deaths',\r\n                    borderColor:'rgba(255,0,0,0.5',\r\n                    fill:true\r\n                }],\r\n            }}\r\n        \r\n        />):null\r\n    )\r\n    const barChart=(\r\n        confirmed\r\n        ?(\r\n            <Bar\r\n                data={{\r\n                    labels:['Infected','Recovered','Deaths'],\r\n                    datasets:[{\r\n                    backgroundColor:[\r\n                        'rgba(0,0,255,0.5)',\r\n                        'rgba(0,255,0,0.5)',\r\n                        'rgba(255,0,0,0.5)'\r\n                    ],\r\n                    data:[confirmed.value,recovered.value,deaths.value],\r\n                }]\r\n                }}\r\n                options={\r\n                    {\r\n                        legend:{display:false},\r\n                        title:{display:true,text:`Current state in ${country}`}\r\n                    }\r\n                }\r\n            />\r\n        ):null\r\n    )\r\n    return (\r\n        <div className={styles.container}>\r\n            {country?barChart:lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker=({handleCountryChange})=>{\r\n\r\n    const [fetchedCountries,setFetchedCountries]=useState([]);\r\n    \r\n    useEffect(()=>{\r\n        const fetchAPI=async ()=>{\r\n                setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n    console.log(fetchedCountries);\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n    {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)};\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\nimport {Cards,Chart,CountryPicker} from './components';\nimport styles from './App.module.css';\nimport {fetchData} from './api';\nimport image from './images/image.png'\nclass App extends React.Component{\n\n  state = {\n    data:{},\n    country:'',\n  }\n  async componentDidMount(){\n    const fetchedData=await fetchData();\n    this.setState({data:fetchedData});\n  }\n\n  handleCountryChange=async(country)=>{\n    const fetchedData=await fetchData(country);\n    this.setState({data:fetchedData,country:country});\n  }\n  render(){\n    const {data,country}=this.state;\n    return(\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\"/>\n        <Cards data={data}/>\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>\n        <Chart data={data} country={country}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3PT2V\",\"image\":\"App_image__3V1k3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__diS8f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__TSZAu\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}